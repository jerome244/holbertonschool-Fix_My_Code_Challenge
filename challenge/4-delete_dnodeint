#include <stdlib.h>
#include "lists.h"

/**
 * delete_dnodeint_at_index - delete the node at a given index in a dlistint_t
 * @head: address of pointer to the list head
 * @index: 0-based index of the node to delete
 *
 * Return: 1 on success, -1 on failure
 */
int delete_dnodeint_at_index(dlistint_t **head, unsigned int index)
{
	dlistint_t *node;
	unsigned int i = 0;

	if (head == NULL || *head == NULL)
		return (-1);

	node = *head;

	/* walk to the node at position index */
	while (node != NULL && i < index)
	{
		node = node->next;
		i++;
	}

	if (node == NULL)
		return (-1); /* index out of range */

	/* relink previous neighbor (or move head if deleting first node) */
	if (node->prev != NULL)
		node->prev->next = node->next;
	else
		*head = node->next;

	/* relink next neighbor */
	if (node->next != NULL)
		node->next->prev = node->prev;

	free(node);
	return (1);
}
